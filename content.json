{"meta":{"title":"ZHP","subtitle":"ZHPの博客","description":"本科 | 软件工程 | JAVA","author":"ZHP","url":"https://zhp9.github.io","root":"/"},"pages":[{"title":"","date":"2021-07-01T07:32:40.355Z","updated":"2021-06-30T20:43:27.762Z","comments":true,"path":"google1xxxxxxx0.html","permalink":"https://zhp9.github.io/google1xxxxxxx0.html","excerpt":"","text":"google-site-verification: google110e5e5e14c8dcf0.html"},{"title":"","date":"2021-07-01T07:32:36.017Z","updated":"2021-06-30T20:43:27.759Z","comments":true,"path":"baidu_verify_xxxxxxx.html","permalink":"https://zhp9.github.io/baidu_verify_xxxxxxx.html","excerpt":"","text":"wvlc3L96QK"},{"title":"放松一下","date":"2019-08-10T08:41:10.000Z","updated":"2021-06-30T20:43:27.690Z","comments":true,"path":"List/index.html","permalink":"https://zhp9.github.io/List/index.html","excerpt":"","text":"影音资源共享"},{"title":"404","date":"2019-08-10T08:41:10.000Z","updated":"2021-06-30T20:43:27.683Z","comments":true,"path":"404.html","permalink":"https://zhp9.github.io/404.html","excerpt":"","text":""},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-30T20:43:27.759Z","comments":true,"path":"archives/index.html","permalink":"https://zhp9.github.io/archives/index.html","excerpt":"","text":""},{"title":"about","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-30T20:43:27.759Z","comments":true,"path":"about/index.html","permalink":"https://zhp9.github.io/about/index.html","excerpt":"","text":""},{"title":"统计","date":"2020-10-31T02:11:28.000Z","updated":"2021-06-30T20:43:27.760Z","comments":true,"path":"census/index.html","permalink":"https://zhp9.github.io/census/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-30T20:43:27.760Z","comments":true,"path":"categories/index.html","permalink":"https://zhp9.github.io/categories/index.html","excerpt":"","text":""},{"title":"友链","date":"2021-07-01T08:42:10.000Z","updated":"2021-07-06T05:11:20.703Z","comments":true,"path":"friends/index.html","permalink":"https://zhp9.github.io/friends/index.html","excerpt":"","text":""},{"title":"资源分享","date":"2021-07-01T08:40:27.000Z","updated":"2021-07-06T05:11:51.655Z","comments":true,"path":"resource/index.html","permalink":"https://zhp9.github.io/resource/index.html","excerpt":"","text":""},{"title":"","date":"2021-07-06T05:32:20.251Z","updated":"2021-07-06T05:32:20.251Z","comments":true,"path":"contact/index.html","permalink":"https://zhp9.github.io/contact/index.html","excerpt":"","text":"畅所欲言 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ 友链 ZHPの友链信息 博客名称: ZHPの博客 博客网址: https://zhp9.github.io/ 博客头像: https://static01.imgkr.com/temp/89ed0d2d538a4fdda441f9438dceabbd.jpg 博客介绍: The harder you work, the luckier you will be"},{"title":"tags","date":"2021-07-01T08:40:27.000Z","updated":"2021-07-06T05:11:33.971Z","comments":true,"path":"tags/index.html","permalink":"https://zhp9.github.io/tags/index.html","excerpt":"","text":""},{"title":"视频","date":"2019-08-10T08:41:10.000Z","updated":"2021-06-30T20:43:27.690Z","comments":true,"path":"List/movies/index.html","permalink":"https://zhp9.github.io/List/movies/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-30T20:43:27.690Z","comments":true,"path":"List/music/index.html","permalink":"https://zhp9.github.io/List/music/index.html","excerpt":"","text":""},{"title":"相册","date":"2021-07-01T07:34:29.193Z","updated":"2021-06-30T20:43:27.686Z","comments":true,"path":"List/galleries/index.html","permalink":"https://zhp9.github.io/List/galleries/index.html","excerpt":"","text":""},{"title":"听听音乐","date":"2019-07-19T08:40:27.000Z","updated":"2021-06-30T20:43:27.691Z","comments":true,"path":"List/tools/index.html","permalink":"https://zhp9.github.io/List/tools/index.html","excerpt":"","text":""},{"title":"动漫插画","date":"2021-06-30T20:43:27.687Z","updated":"2021-06-30T20:43:27.687Z","comments":true,"path":"List/galleries/动漫插画/index.html","permalink":"https://zhp9.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/index.html","excerpt":"","text":""},{"title":"乖巧小狗","date":"2021-06-30T20:43:27.686Z","updated":"2021-06-30T20:43:27.686Z","comments":true,"path":"List/galleries/乖巧小狗/index.html","permalink":"https://zhp9.github.io/List/galleries/%E4%B9%96%E5%B7%A7%E5%B0%8F%E7%8B%97/index.html","excerpt":"","text":""},{"title":"动漫人物","date":"2021-06-30T20:43:27.686Z","updated":"2021-06-30T20:43:27.686Z","comments":true,"path":"List/galleries/动漫人物/index.html","permalink":"https://zhp9.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E4%BA%BA%E7%89%A9/index.html","excerpt":"","text":""},{"title":"二次元风","date":"2021-06-30T20:43:27.686Z","updated":"2021-06-30T20:43:27.686Z","comments":true,"path":"List/galleries/二次元风/index.html","permalink":"https://zhp9.github.io/List/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/index.html","excerpt":"","text":""},{"title":"呆萌猫咪","date":"2021-06-30T20:43:27.688Z","updated":"2021-06-30T20:43:27.688Z","comments":true,"path":"List/galleries/呆萌猫咪/index.html","permalink":"https://zhp9.github.io/List/galleries/%E5%91%86%E8%90%8C%E7%8C%AB%E5%92%AA/index.html","excerpt":"","text":""},{"title":"动漫风景","date":"2021-06-30T20:43:27.687Z","updated":"2021-06-30T20:43:27.687Z","comments":true,"path":"List/galleries/动漫风景/index.html","permalink":"https://zhp9.github.io/List/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""},{"title":"城市风光","date":"2021-06-30T20:43:27.688Z","updated":"2021-06-30T20:43:27.688Z","comments":true,"path":"List/galleries/城市风光/index.html","permalink":"https://zhp9.github.io/List/galleries/%E5%9F%8E%E5%B8%82%E9%A3%8E%E5%85%89/index.html","excerpt":"","text":""},{"title":"清新花卉","date":"2021-06-30T20:43:27.688Z","updated":"2021-06-30T20:43:27.688Z","comments":true,"path":"List/galleries/清新花卉/index.html","permalink":"https://zhp9.github.io/List/galleries/%E6%B8%85%E6%96%B0%E8%8A%B1%E5%8D%89/index.html","excerpt":"","text":""},{"title":"炫酷跑车","date":"2021-06-30T20:43:27.689Z","updated":"2021-06-30T20:43:27.689Z","comments":true,"path":"List/galleries/炫酷跑车/index.html","permalink":"https://zhp9.github.io/List/galleries/%E7%82%AB%E9%85%B7%E8%B7%91%E8%BD%A6/index.html","excerpt":"","text":""},{"title":"璀璨星空","date":"2021-06-30T20:43:27.689Z","updated":"2021-06-30T20:43:27.689Z","comments":true,"path":"List/galleries/璀璨星空/index.html","permalink":"https://zhp9.github.io/List/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/index.html","excerpt":"","text":""},{"title":"甜美食品","date":"2021-06-30T20:43:27.689Z","updated":"2021-06-30T20:43:27.689Z","comments":true,"path":"List/galleries/甜美食品/index.html","permalink":"https://zhp9.github.io/List/galleries/%E7%94%9C%E7%BE%8E%E9%A3%9F%E5%93%81/index.html","excerpt":"","text":""},{"title":"自然风景","date":"2021-07-01T07:34:36.489Z","updated":"2021-06-30T20:43:27.690Z","comments":true,"path":"List/galleries/自然风景/index.html","permalink":"https://zhp9.github.io/List/galleries/%E8%87%AA%E7%84%B6%E9%A3%8E%E6%99%AF/index.html","excerpt":"","text":""}],"posts":[{"title":"计算机电脑外接显示屏闪烁问题（硬件与软件结合）解决方法","slug":"计算机电脑外接显示屏闪烁问题（硬件与软件结合）解决方法","date":"2021-07-17T05:09:16.000Z","updated":"2021-07-17T06:36:29.071Z","comments":true,"path":"posts/2e7e0051.html","link":"","permalink":"https://zhp9.github.io/posts/2e7e0051.html","excerpt":"","text":"外接屏幕闪烁解决方法一、屏幕分辨率设置（配置）1、开始按钮—&gt;设置(组合快捷键：Win+I/Fn+F9 进入win10系统设置。) 2、左键单击”系统”（显示、声音、通知、电源）选项(或者“搜索框”输入字母“d”后弹出的下拉菜单—&gt;显示设置) 3、显示—&gt;高级显示设置 4.进入外接显示屏适配器 5.修改刷新频率与电脑一致 二、修改屏幕分辨率（配置） 三、硬件排查：1.将外接显示屏连接其他主机（排查外接显示器）2.排查线路（插拔你使用的HDMI线或者VGA线）3.排除同一插排影响，外接显示器和电脑电源分开（拔出电脑电源，使用电脑电池）如果出现硬件问题，该买的还得买 如有帮助，不胜荣幸！","categories":[{"name":"电脑小姿势","slug":"电脑小姿势","permalink":"https://zhp9.github.io/categories/%E7%94%B5%E8%84%91%E5%B0%8F%E5%A7%BF%E5%8A%BF/"}],"tags":[{"name":"电脑","slug":"电脑","permalink":"https://zhp9.github.io/tags/%E7%94%B5%E8%84%91/"},{"name":"小姿势","slug":"小姿势","permalink":"https://zhp9.github.io/tags/%E5%B0%8F%E5%A7%BF%E5%8A%BF/"}],"author":"ZHP"},{"title":"Java 正则表达式的使用","slug":"正则表达式的使用","date":"2021-07-15T08:06:01.000Z","updated":"2021-07-16T11:30:11.077Z","comments":true,"path":"posts/dc530199.html","link":"","permalink":"https://zhp9.github.io/posts/dc530199.html","excerpt":"","text":"","categories":[{"name":"JAVA 基础阶段","slug":"JAVA-基础阶段","permalink":"https://zhp9.github.io/categories/JAVA-%E5%9F%BA%E7%A1%80%E9%98%B6%E6%AE%B5/"}],"tags":[{"name":"JAVA","slug":"JAVA","permalink":"https://zhp9.github.io/tags/JAVA/"},{"name":"基础阶段","slug":"基础阶段","permalink":"https://zhp9.github.io/tags/%E5%9F%BA%E7%A1%80%E9%98%B6%E6%AE%B5/"}],"author":"ZHP"},{"title":"ArrayList集合仿写","slug":"ArrayList集合仿写","date":"2021-07-15T06:21:12.000Z","updated":"2021-07-15T06:28:28.915Z","comments":true,"path":"posts/bbb8986e.html","link":"","permalink":"https://zhp9.github.io/posts/bbb8986e.html","excerpt":"","text":"ArrayList集合仿写仿写前,先了解下,在ArrayList泛型不能直接填写基本数据类型,只能填写他们的包装类 方法: ****表示一种指定的数据类型，叫做泛型。 E ，取自Element（元素）的首字母。在出现 E 的地方，我们使 用一种引用数据类型将其替换即可，表示我们将存储哪种引用类型的元素。 对于元素的操作,基本体现在——增、删、查。 常用的方法有： public boolean add(E e) ：将指定的元素添加到此集合的尾部。 public E remove(int index) ：移除此集合中指定位置上的元素。返回被删除的元素。 public E get(int index) ：返回此集合中指定位置上的元素。返回获取的元素。 public int size() ：返回此集合中的元素数。遍历集合时，可以控制索引范围，防止越界。 public E set(int index,E e): 设置索引的值为 e; public void clear():清空数组,实际上未清空,但是索引的存在,抛出异常 package com.ping.test02; //模拟java.util.ArrayList类 public class ZhpArrayList { private String[] elementData ; private int index = 0 ; //构造方法 public ZhpArrayList(){ elementData = new String[10]; } public void add(String element){ if(index &lt; elementData.length){ elementData[index] = element ; }else{ //创建一个临时数组,长度是原数组长度+5 String [] temp = new String[elementData.length + 5]; //将原数组中的数据复制到目标数组[temp]中 System.arraycopy(elementData,0,temp,0,elementData.length); //画龙点睛之笔 elementData = temp ;//非常重要 elementData[index] = element ; } index++; } public String get(int i){//简单 if (index &lt;= i) { throw new ArrayIndexOutOfBoundsException(\"数组下表越界，请查收!\"); } return elementData[i]; } public void clear(){//简单 index=0; } /* public String remove(int i){//有点难度 String s = elementData[i]; System.arraycopy(elementData, i+1, elementData, i , index - i - 1); index--; return s; }*/ public String remove(int i){//有点难度 String s = elementData[i]; for (int j = i; j &lt; index-i+1; j++) { elementData[j] = elementData[j+1]; } index--; return s; } public int size(){//简单 return index ; } public String set(int i, String element){//简单 String s = elementData[i]; elementData[i] = element ; return s; } } 测试: package com.ping.test02; public class ZhpArrayListTest { public static void main(String[] args) { ZhpArrayList list = new ZhpArrayList(); list.add(\"a\"); list.add(\"b\"); list.add(\"c\"); list.add(\"d\"); list.add(\"e\"); list.add(\"f\"); list.add(\"g\"); list.add(\"h\"); traverseList(list); System.out.println(\"删除索引为0的元素: \" + list.remove(0)); traverseList(list); System.out.println(\"更新索引为1的元素为 1的元素原来是: \" + list.set(1, \"1\")); traverseList(list); } /** * 遍历list集合 */ private static void traverseList(ZhpArrayList list) { for (int i = 0; i &lt; list.size(); i++) { System.out.print(list.get(i) + '\\t'); } System.out.println(); } }","categories":[{"name":"JAVA 基础阶段","slug":"JAVA-基础阶段","permalink":"https://zhp9.github.io/categories/JAVA-%E5%9F%BA%E7%A1%80%E9%98%B6%E6%AE%B5/"}],"tags":[{"name":"JAVA","slug":"JAVA","permalink":"https://zhp9.github.io/tags/JAVA/"},{"name":"基础阶段","slug":"基础阶段","permalink":"https://zhp9.github.io/tags/%E5%9F%BA%E7%A1%80%E9%98%B6%E6%AE%B5/"}],"author":"ZHP"},{"title":"Java String:字符串常量池","slug":"Java-String-字符串常量池","date":"2021-07-15T05:39:10.000Z","updated":"2021-07-15T05:44:04.756Z","comments":true,"path":"posts/67c36978.html","link":"","permalink":"https://zhp9.github.io/posts/67c36978.html","excerpt":"","text":"Java String:字符串常量池基础的引用数据类型; java设计者为String提供字符串常量池以提高其性能 现在就来讲讲字符串常量池吧 1.字符串常量池的具体原理是什么?2.字符串常量池的设计思想是什么?a.字符串的分配,和其他的对象分配一样,耗费高昂的时间和空间代价,作为最基础的数据类型,大量频繁的创建字符串,极大程度的影响程序的性能. b.JVM为了提高性能和减少内存开销,在实例字符串常量的时候进行了一些优化 为字符串开辟一个字符串常量池,类似缓存区 创建字符串常量时,首先坚持字符串常量池是否存在该字符串,存在的话返回引用实例,不存在,实例该字符串并放入池中 1.实现的基础 实现该优化的基础是因为字符串是不可变的，可以不用担心数据冲突进行共享 运行时实例创建的全局字符串常量池中有一个表，总是为池中每个唯一的字符串对象维护一个引用,这就意味着它们一直引用着字符串常量池中的对象，所以，在常量池中的这些字符串不会被垃圾收集器回收 代码：从字符串常量池中获取相应的字符串 String s1 = \"hello\";//原来不存在，实例化该字符串并且放入常量池 String ss = \"hello\";//字符串常量池中含有，返回“hello”的引用实例 System.out.println(\"s1 == ss :\" + (s1 == ss)); //true 3.字符串常量池在哪里?首先先了解一下堆，栈，方法区 \\堆区**:1.存储的全部是对象，每个对象都包含一个与之对应的class的信息。(class的目的是得到操作指令)2.jvm只有一个堆区(heap)被所有线程共享，堆中不存放基本类型和对象引用，只存放对象本身 对象的由垃圾回收器负责回收，因此大小和生命周期不需要确定 栈区:1.每个线程包含一个栈区，栈中只保存基础数据类型的对象和自定义对象的引用(不是对象)，对象都存放在堆区中2.每个栈中的数据(原始类型和对象引用)都是私有的，其他栈不能访问。3.栈分为3个部分：基本类型变量区、执行环境上下文、操作指令区(存放操作指令)。\\方法区**:1.又叫静态区，跟堆一样，被所有的线程共享。方法区包含所有的class和static变量。2.方法区中包含的都是在整个程序中永远唯一的元素，如class，static变量。 具体实例： String str = new String(“abc”) 创建多少个对象？ 在常量池中查找是否有“abc”对象 有则返回对应的引用实例 没有则创建对应的实例对象 在堆中 new 一个 String(“abc”) 对象 将对象地址赋值给str,创建一个引用 所以，常量池中没有“abc”字面量则创建两个对象，否则创建一个对象。以及创建一个引用 String str1 = new String(“A”+”B”) ; 会创建多少个对象?String str2 = new String(“ABC”) + “ABC” ; 会创建多少个对象? str1：字符串常量池：”A”,”B”,”AB” : 3个堆：new String(“AB”) ：1个引用：str1 ：1个总共 ：5个 str2 ：字符串常量池：”ABC” : 1个堆：new String(“ABC”) ：1个引用：str2 ：1个总共 ：3个","categories":[{"name":"JAVA 基础阶段","slug":"JAVA-基础阶段","permalink":"https://zhp9.github.io/categories/JAVA-%E5%9F%BA%E7%A1%80%E9%98%B6%E6%AE%B5/"}],"tags":[{"name":"JAVA","slug":"JAVA","permalink":"https://zhp9.github.io/tags/JAVA/"},{"name":"基础阶段","slug":"基础阶段","permalink":"https://zhp9.github.io/tags/%E5%9F%BA%E7%A1%80%E9%98%B6%E6%AE%B5/"}],"author":"ZHP"},{"title":"计算机网络原理","slug":"计算机网络 第一章","date":"2021-07-01T16:00:00.000Z","updated":"2021-07-18T00:31:59.261Z","comments":true,"path":"posts/7a46f93c.html","link":"","permalink":"https://zhp9.github.io/posts/7a46f93c.html","excerpt":"","text":"计算机网络–第一章导图 1.1计算机网络概述 1.1.1概念 1.1.2计算机网络的功能 1.1.3计算机的组成和分类1.计算机网络的组成部分2.计算机网络的工作方式 ​ 3.功能组成 4.计算机网络的分类 1.1.4标准化工作 1.1.5性能指标1、速率 2、带宽 3.吞吐量 4.时延 5.时延带宽积 6.往返时延RTT 7、利用率 1.2 体系结构&amp;参考模型1.2.1 分层结构、协议、接口、服务 1.2.2 IOS/OSI模型 1.2.3 TCP/IP协议","categories":[{"name":"408 计算机网络原理","slug":"408-计算机网络原理","permalink":"https://zhp9.github.io/categories/408-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"}],"tags":[{"name":"408","slug":"408","permalink":"https://zhp9.github.io/tags/408/"},{"name":"计算机网络原理","slug":"计算机网络原理","permalink":"https://zhp9.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"}],"author":"ZHP"},{"title":"开源搭建教程","slug":"BlogOpen","date":"2021-06-30T16:00:00.000Z","updated":"2021-07-18T00:31:39.564Z","comments":true,"path":"posts/d74d8b76.html","link":"","permalink":"https://zhp9.github.io/posts/d74d8b76.html","excerpt":"","text":"","categories":[{"name":"博客篇","slug":"博客篇","permalink":"https://zhp9.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"hexo-blog-lucky","slug":"hexo-blog-lucky","permalink":"https://zhp9.github.io/tags/hexo-blog-lucky/"},{"name":"博客搭建教程","slug":"博客搭建教程","permalink":"https://zhp9.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"}],"author":"ZHP"}],"categories":[{"name":"电脑小姿势","slug":"电脑小姿势","permalink":"https://zhp9.github.io/categories/%E7%94%B5%E8%84%91%E5%B0%8F%E5%A7%BF%E5%8A%BF/"},{"name":"JAVA 基础阶段","slug":"JAVA-基础阶段","permalink":"https://zhp9.github.io/categories/JAVA-%E5%9F%BA%E7%A1%80%E9%98%B6%E6%AE%B5/"},{"name":"408 计算机网络原理","slug":"408-计算机网络原理","permalink":"https://zhp9.github.io/categories/408-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"},{"name":"博客篇","slug":"博客篇","permalink":"https://zhp9.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"}],"tags":[{"name":"电脑","slug":"电脑","permalink":"https://zhp9.github.io/tags/%E7%94%B5%E8%84%91/"},{"name":"小姿势","slug":"小姿势","permalink":"https://zhp9.github.io/tags/%E5%B0%8F%E5%A7%BF%E5%8A%BF/"},{"name":"JAVA","slug":"JAVA","permalink":"https://zhp9.github.io/tags/JAVA/"},{"name":"基础阶段","slug":"基础阶段","permalink":"https://zhp9.github.io/tags/%E5%9F%BA%E7%A1%80%E9%98%B6%E6%AE%B5/"},{"name":"408","slug":"408","permalink":"https://zhp9.github.io/tags/408/"},{"name":"计算机网络原理","slug":"计算机网络原理","permalink":"https://zhp9.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"},{"name":"hexo-blog-lucky","slug":"hexo-blog-lucky","permalink":"https://zhp9.github.io/tags/hexo-blog-lucky/"},{"name":"博客搭建教程","slug":"博客搭建教程","permalink":"https://zhp9.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"}]}